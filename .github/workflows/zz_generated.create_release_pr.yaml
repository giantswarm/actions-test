# DO NOT EDIT. Generated with:
#
#    devctl@4.9.0
#
name: Create Release PR
on:
  push:
    branches:
      - 'legacy#release#v*.*.*'
      - 'main#release#v*.*.*'
      - 'master#release#v*.*.*'
      - 'release-v*.*.x#release#v*.*.*'
      # "!" negates previous positive patterns so it has to be at the end.
      - '!release-v*.x.x#release#v*.*.*'
jobs:
  debug_info:
    name: Debug info
    runs-on: ubuntu-20.04
    steps:
      - name: Print github context JSON
        run: |
          cat <<EOF
          ${{ toJson(github) }}
          EOF
  gather_facts:
    name: Gather facts
    runs-on: ubuntu-20.04
    outputs:
      base: ${{ steps.gather_facts.outputs.base }}
      head: ${{ steps.gather_facts.outputs.head }}
      skip: ${{ steps.pr_exists.outputs.skip }}
      version: ${{ steps.gather_facts.outputs.version }}
      previous: ${{ steps.gather_facts.outputs.previous }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Gather facts
        id: gather_facts
        run: |
          head="${{ github.event.ref }}"
          head="${head#refs/heads/}" # Strip "refs/heads/" prefix.
          base="$(echo $head | cut -d '#' -f 1)"
          base="${base#refs/heads/}" # Strip "refs/heads/" prefix.
          version="$(echo $head | cut -d '#' -f 3)"
          version="${version#v}" # Strip "v" prefix.
          previous="$(git describe --abbrev=0)"
          previous="${previous#v}" # Strip "v" prefix.
          echo "base=\"$base\" head=\"$head\" version=\"$version\" previous=\"$previous\""
          echo "::set-output name=base::${base}"
          echo "::set-output name=head::${head}"
          echo "::set-output name=version::${version}"
          echo "::set-output name=previous::${previous}"
      - name: Check if PR exists
        id: pr_exists
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          if gh pr view --repo ${{ github.repository }} ${{ github.event.ref }} | grep -i 'state:[[:space:]]*open' >/dev/null; then
            gh pr view --repo ${{ github.repository }} ${{ github.event.ref }}
            echo "::set-output name=skip::true"
          else
            echo "::set-output name=skip::false"
          fi

  go_changelog:
    runs-on: ubuntu-latest
    outputs:
      body: ${{ steps.build_changelog.outputs.body }}
    container:
      image: docker://giantswarm/go-changelog:0.0.0-71d2482c3c35efbc263202bb6372b3026a2857e4
      volumes:
        - ${{ github.workspace }}:/github/workspace
    needs:
      - gather_facts
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build changelog
        id: build_changelog
        run: |
          body=$(/go-changelog/changelog-build \
            -last-release "v${{ needs.gather_facts.outputs.previous }}" \
            -this-release "${{ needs.gather_facts.outputs.head }}" \
            -git-dir . \
            -entries-dir .changelog \
            -note-template /go-changelog/release-note.tmpl \
            -changelog-template /go-changelog/changelog.tmpl)
          echo "::set-output name=body::${body}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md

      - name: Upload changelog directory
        uses: actions/upload-artifact@v2
        with:
          name: changelog-directory
          path: .changelog

  create_release_pr:
    name: Create release PR
    runs-on: ubuntu-20.04
    needs:
      - gather_facts
      - go_changelog
    if: ${{ needs.gather_facts.outputs.skip != 'true' }}
    env:
      architect_flags: "--organisation ${{ github.repository_owner }} --project ${{ github.event.repository.name }}"
    steps:
      - name: Install architect
        uses: giantswarm/install-binary-action@v1.0.0
        with:
          binary: "architect"
          version: "3.4.0"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare release changes
        run: |
          architect prepare-release ${{ env.architect_flags }} --version "${{ needs.gather_facts.outputs.version }}"
      - name: Create release commit
        env:
          version: "${{ needs.gather_facts.outputs.version }}"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add -A
          git commit -m "Release v${{ env.version }}"
      - name: Push changes
        env:
          remote_repo: "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
        run: |
          git push "${remote_repo}" HEAD:${{ github.ref }}
      - name: Create PR
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          base: "${{ needs.gather_facts.outputs.base }}"
          version: "${{ needs.gather_facts.outputs.version }}"
          body: "${{ needs.gather_facts.outputs.version }}"
        run: |
          echo "Release v${{ env.version }}\n\n" > release.txt
          echo "${{ needs.go_changelog.outputs.body }}" >> release.txt
          echo "```release-note:none\n```" >> release.txt
          hub pull-request -f  -F release.txt -a ${{ github.actor }} -b ${{ env.base }} -h ${{ github.event.ref }}

  commit-changes:
    runs-on: ubuntu-latest
    needs: [go_changelog]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download changelog
        uses: actions/download-artifact@v2
        with:
          path: .
          name: changelog

      - name: Download changelog directory
        uses: actions/download-artifact@v2
        with:
          path: .changelog
          name: changelog-directory

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Apply go-changelog changes
