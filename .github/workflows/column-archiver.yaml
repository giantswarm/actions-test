name: Periodically archive Issues in a Column
on:
  issues:
    types: [labeled]
jobs:
  job:
    name: Periodically archive Issues in a Column
    runs-on: ubuntu-latest
    steps:
    - name: Periodically archive Issues in a Column
      env:
        GS_TEST: "7930738,30"
      run: |
        set -eu

        now=$(date +"%s")

        for envvar in $(env | grep GS_ | awk -F '=' '{print $2}'); do
            column_id=$(echo $envvar | awk -F ',' '{print $1}')
            archival_threshold=$(echo $envvar | awk -F ',' '{print $2}')

            cards=$(curl -Ss https://api.github.com/projects/columns/$column_id/cards \
                --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                --header 'Accept: application/vnd.github.inertia-preview+json' | jq --compact-output .[])

            while IFS= read -r card ; do
                url=$(echo $card | jq --raw-output .url)
                updated_at=$(echo $card | jq --raw-output .updated_at)

                updated_at_seconds=$(date "+%s" -d $updated_at)
                archive_time_seconds=$(($updated_at_seconds+$archival_threshold))

                echo $url $updated_at $updated_at_seconds $archive_time_seconds

                if [ $archive_time_seconds -le $now ]; then
                    echo "Card $url is older than archival_threshold, archiving"

                    curl -Ss $url \
                        --request "PATCH" \
                        --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                        --header 'Accept: application/vnd.github.inertia-preview+json' \
                        --data "{\"archived\": true}"
                fi
            done <<< "$cards"
        done
