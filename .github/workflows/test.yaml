name: Add Issue to Project When Labeled
on:
  issues:
    types: [labeled, unlabeled]
jobs:
  job:
    name: Add Issue to Project When Labeled
    runs-on: ubuntu-latest
    steps:
    - name: Create Project Card for Issue in appropriate Project Column
      env:
        GS_POSTMORTEM: bug,7930737                # Test project
      run: |
        action=$(cat $GITHUB_EVENT_PATH | jq -r .action)
        event_label=$(cat $GITHUB_EVENT_PATH | jq -r .label.name)
        issue_id=$(cat $GITHUB_EVENT_PATH | jq .issue.id)
        issue_url=$(cat $GITHUB_EVENT_PATH | jq -r .issue.url)

        echo $action $event_label $issue_id $issue_url

        for envvar in $(env | grep GS_ | awk -F '=' '{print $2}'); do
            label=$(echo $envvar | awk -F ',' '{print $1}')
            column_id=$(echo $envvar | awk -F ',' '{print $2}')

            if [[ "$event_label" == "$label" ]]; then
                if [[ "$action" == "labeled" ]]; then
                    curl https://api.github.com/projects/columns/$column_id/cards \
                        --header 'authorization: Bearer ${{ secrets.LABEL_PROJECT_TOKEN }}' \
                        --header 'Accept: application/vnd.github.inertia-preview+json' \
                        --data "{\"content_id\": $issue_id, \"content_type\": \"Issue\"}"
                fi

                if [[ "$action" == "unlabeled" ]]; then
                    project_column=$(curl -Ss https://api.github.com/projects/columns/$column_id \
                        --header 'authorization: Bearer ${{ secrets.LABEL_PROJECT_TOKEN }}' \
                        --header 'Accept: application/vnd.github.inertia-preview+json')

                    project_id=$(echo $project_column | jq -r .project_url | awk -F '/' '{print $5}')

                    project_columns=$(curl -Ss https://api.github.com/projects/$project_id/columns \
                        --header 'authorization: Bearer ${{ secrets.LABEL_PROJECT_TOKEN }}' \
                        --header 'Accept: application/vnd.github.inertia-preview+json')

                    echo $project_columns | jq -c '.[]' | while read c; do
                        cards_url=$(echo $c | jq -r .cards_url)

                        cards=$(curl -Ss $cards_url \
                            --header 'authorization: Bearer ${{ secrets.LABEL_PROJECT_TOKEN }}' \
                            --header 'Accept: application/vnd.github.inertia-preview+json')

                        echo $cards | jq -c '.[]' | while read card; do
                            card_id=$(echo $card | jq .id)
                            url=$(echo $card | jq -r .content_url)

                            if [[ "$issue_url" == "url" ]]; then
                                curl -X DELETE https://api.github.com/projects/columns/cards/{$card_id} \
                                    --header 'authorization: Bearer ${{ secrets.LABEL_PROJECT_TOKEN }}' \
                                    --header 'Accept: application/vnd.github.inertia-preview+json'
                            fi
                        done
                    done
                fi
            fi
        done
